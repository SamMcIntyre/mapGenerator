import numpy.random as random
import matplotlib.colors
import networkx as nx
import matplotlib.pyplot as plt

G = nx.Graph()

b = 'biome'
e = 'elevation'
p = 'precipitation'
l = 'latitude'
tempMap = [
    (  0, {b: '', e: -1, p: 0, l: 0}), (  1, {b: '', e: -1, p: 0, l: 0}), (  2, {b: '', e: -1, p: 0, l: 0}), (  3, {b: '', e: -1, p: 0, l: 0}), (  4, {b: '', e: -1, p: 0, l: 0}), (  5, {b: '', e: -1, p: 0, l: 0}), (  6, {b: '', e: -1, p: 0, l: 0}), (  7, {b: '', e: -1, p: 0, l: 0}), (  8, {b: '', e: -1, p: 0, l: 0}), (  9, {b: '', e: -1, p: 0, l: 0}), ( 10, {b: '', e: -1, p: 0, l: 0}), ( 11, {b: '', e: -1, p: 0, l: 0}), ( 12, {b: '', e: -1, p: 0, l: 0}), ( 13, {b: '', e: -1, p: 0, l: 0}), ( 14, {b: '', e: -1, p: 0, l: 0}), ( 15, {b: '', e: -1, p: 0, l: 0}), ( 16, {b: '', e: -1, p: 0, l: 0}), ( 17, {b: '', e: -1, p: 0, l: 0}), ( 18, {b: '', e: -1, p: 0, l: 0}), ( 19, {b: '', e: -1, p: 0, l: 0}), ( 20, {b: '', e: -1, p: 0, l: 0}), ( 21, {b: '', e: -1, p: 0, l: 0}), ( 22, {b: '', e: -1, p: 0, l: 0}), ( 23, {b: '', e: -1, p: 0, l: 0}), ( 24, {b: '', e: -1, p: 0, l: 0}), ( 25, {b: '', e: -1, p: 0, l: 0}), ( 26, {b: '', e: -1, p: 0, l: 0}), ( 27, {b: '', e: -1, p: 0, l: 0}), ( 28, {b: '', e: -1, p: 0, l: 0}), ( 29, {b: '', e: -1, p: 0, l: 0}),
    ( 30, {b: '', e: -1, p: 0, l: 0}), ( 31, {b: '', e: -1, p: 0, l: 0}), ( 32, {b: '', e: -1, p: 0, l: 0}), ( 33, {b: '', e: -1, p: 0, l: 0}), ( 34, {b: '', e: -1, p: 0, l: 0}), ( 35, {b: '', e: -1, p: 0, l: 0}), ( 36, {b: '', e: -1, p: 0, l: 0}), ( 37, {b: '', e: -1, p: 0, l: 0}), ( 38, {b: '', e: -1, p: 0, l: 0}), ( 39, {b: '', e: -1, p: 0, l: 0}), ( 40, {b: '', e: -1, p: 0, l: 0}), ( 41, {b: '', e: -1, p: 0, l: 0}), ( 42, {b: '', e: -1, p: 0, l: 0}), ( 43, {b: '', e: -1, p: 0, l: 0}), ( 44, {b: '', e: -1, p: 0, l: 0}), ( 45, {b: '', e: -1, p: 0, l: 0}), ( 46, {b: '', e: -1, p: 0, l: 0}), ( 47, {b: '', e: -1, p: 0, l: 0}), ( 48, {b: '', e: -1, p: 0, l: 0}), ( 49, {b: '', e: -1, p: 0, l: 0}), ( 50, {b: '', e: -1, p: 0, l: 0}), ( 51, {b: '', e: -1, p: 0, l: 0}), ( 52, {b: '', e: -1, p: 0, l: 0}), ( 53, {b: '', e: -1, p: 0, l: 0}), ( 54, {b: '', e: -1, p: 0, l: 0}), ( 55, {b: '', e: -1, p: 0, l: 0}), ( 56, {b: '', e: -1, p: 0, l: 0}), ( 57, {b: '', e: -1, p: 0, l: 0}), ( 58, {b: '', e: -1, p: 0, l: 0}), ( 59, {b: '', e: -1, p: 0, l: 0}),
    ( 60, {b: '', e: -1, p: 0, l: 0}), ( 61, {b: '', e: -1, p: 0, l: 0}), ( 62, {b: '', e: -1, p: 0, l: 0}), ( 63, {b: '', e: -1, p: 0, l: 0}), ( 64, {b: '', e: -1, p: 0, l: 0}), ( 65, {b: '', e: 1, p: 220, l: 0}), ( 66, {b: '', e: 1, p: 110, l: 0}), ( 67, {b: '', e: -1, p: 0, l: 0}), ( 68, {b: '', e: -1, p: 0, l: 0}), ( 69, {b: '', e: -1, p: 0, l: 0}), ( 70, {b: '', e: -1, p: 0, l: 0}), ( 71, {b: '', e: -1, p: 0, l: 0}), ( 72, {b: '', e: -1, p: 0, l: 0}), ( 73, {b: '', e: -1, p: 0, l: 0}), ( 74, {b: '', e: -1, p: 0, l: 0}), ( 75, {b: '', e: -1, p: 0, l: 0}), ( 76, {b: '', e: -1, p: 0, l: 0}), ( 77, {b: '', e: 1, p: 220, l: 0}), ( 78, {b: '', e: 1, p: 220, l: 0}), ( 79, {b: '', e: 1, p: 220, l: 0}), ( 80, {b: '', e: 1, p: 220, l: 0}), ( 81, {b: '', e: 1, p: 220, l: 0}), ( 82, {b: '', e: 1, p: 220, l: 0}), ( 83, {b: '', e: -1, p: 0, l: 0}), ( 84, {b: '', e: -1, p: 0, l: 0}), ( 85, {b: '', e: -1, p: 0, l: 0}), ( 86, {b: '', e: -1, p: 0, l: 0}), ( 87, {b: '', e: -1, p: 0, l: 0}), ( 88, {b: '', e: -1, p: 0, l: 0}), ( 89, {b: '', e: -1, p: 0, l: 0}),
    ( 90, {b: '', e: -1, p: 0, l: 0}), ( 91, {b: '', e: -1, p: 0, l: 0}), ( 92, {b: '', e: -1, p: 0, l: 0}), ( 93, {b: '', e: -1, p: 0, l: 0}), ( 94, {b: '', e: 1, p: 220, l: 0}), ( 95, {b: '', e: 1, p: 220, l: 0}), ( 96, {b: '', e: 1, p: 110, l: 0}), ( 97, {b: '', e: 1, p: 0, l: 0}), ( 98, {b: '', e: 1, p: 0, l: 0}), ( 99, {b: '', e: -1, p: 0, l: 0}), (100, {b: '', e: -1, p: 0, l: 0}), (101, {b: '', e: -1, p: 0, l: 0}), (102, {b: '', e: -1, p: 0, l: 0}), (103, {b: '', e: 1, p: 0, l: 0}), (104, {b: '', e: 1, p: 0, l: 0}), (105, {b: '', e: 1, p: 110, l: 0}), (106, {b: '', e: 1, p: 110, l: 0}), (107, {b: '', e: 1, p: 110, l: 0}), (108, {b: '', e: 1, p: 220, l: 0}), (109, {b: '', e: 1, p: 220, l: 0}), (110, {b: '', e: 1, p: 220, l: 0}), (111, {b: '', e: 1, p: 220, l: 0}), (112, {b: '', e: 500, p: 0, l: 0}), (113, {b: '', e: 1, p: 110, l: 0}), (114, {b: '', e: -1, p: 0, l: 0}), (115, {b: '', e: -1, p: 0, l: 0}), (116, {b: '', e: -1, p: 0, l: 0}), (117, {b: '', e: -1, p: 0, l: 0}), (118, {b: '', e: -1, p: 0, l: 0}), (119, {b: '', e: -1, p: 0, l: 0}),
    (120, {b: '', e: -1, p: 0, l: 0}), (121, {b: '', e: -1, p: 0, l: 0}), (122, {b: '', e: -1, p: 0, l: 0}), (123, {b: '', e: 1, p: 220, l: 0}), (124, {b: '', e: 1, p: 220, l: 0}), (125, {b: '', e: 1, p: 220, l: 0}), (126, {b: '', e: 1, p: 220, l: 0}), (127, {b: '', e: 1, p: 110, l: 0}), (128, {b: '', e: 1, p: 0, l: 0}), (129, {b: '', e: 1, p: 0, l: 0}), (130, {b: '', e: 1, p: 0, l: 0}), (131, {b: '', e: 1, p: 0, l: 0}), (132, {b: '', e: 1, p: 0, l: 0}), (133, {b: '', e: 1, p: 0, l: 0}), (134, {b: '', e: 1, p: 0, l: 0}), (135, {b: '', e: 1, p: 0, l: 0}), (136, {b: '', e: 1, p: 110, l: 0}), (137, {b: '', e: 1, p: 110, l: 0}), (138, {b: '', e: 1, p: 110, l: 0}), (139, {b: '', e: 1, p: 220, l: 0}), (140, {b: '', e: 1, p: 220, l: 0}), (141, {b: '', e: 1, p: 220, l: 0}), (142, {b: '', e: 500, p: 0, l: 0}), (143, {b: '', e: 1, p: 110, l: 0}), (144, {b: '', e: -1, p: 0, l: 0}), (145, {b: '', e: -1, p: 0, l: 0}), (146, {b: '', e: -1, p: 0, l: 0}), (147, {b: '', e: -1, p: 0, l: 0}), (148, {b: '', e: -1, p: 0, l: 0}), (149, {b: '', e: -1, p: 0, l: 0}),
    (150, {b: '', e: -1, p: 0, l: 0}), (151, {b: '', e: -1, p: 0, l: 0}), (152, {b: '', e: 1, p: 220, l: 0}), (153, {b: '', e: 1, p: 220, l: 0}), (154, {b: '', e: 1, p: 220, l: 0}), (155, {b: '', e: 1, p: 220, l: 0}), (156, {b: '', e: 1, p: 110, l: 0}), (157, {b: '', e: 1, p: 110, l: 0}), (158, {b: '', e: 1, p: 0, l: 0}), (159, {b: '', e: 1, p: 0, l: 0}), (160, {b: '', e: 1, p: 0, l: 0}), (161, {b: '', e: 1, p: 0, l: 0}), (162, {b: '', e: 1, p: 0, l: 0}), (163, {b: '', e: 1, p: 0, l: 0}), (164, {b: '', e: 1, p: 0, l: 0}), (165, {b: '', e: 1, p: 0, l: 0}), (166, {b: '', e: 1, p: 110, l: 0}), (167, {b: '', e: 1, p: 110, l: 0}), (168, {b: '', e: 1, p: 110, l: 0}), (169, {b: '', e: 1, p: 110, l: 0}), (170, {b: '', e: 1, p: 220, l: 0}), (171, {b: '', e: 500, p: 0, l: 0}), (172, {b: '', e: 500, p: 0, l: 0}), (173, {b: '', e: 1, p: 110, l: 0}), (174, {b: '', e: 1, p: 110, l: 0}), (175, {b: '', e: -1, p: 0, l: 0}), (176, {b: '', e: -1, p: 0, l: 0}), (177, {b: '', e: -1, p: 0, l: 0}), (178, {b: '', e: -1, p: 0, l: 0}), (179, {b: '', e: -1, p: 0, l: 0}),
    (180, {b: '', e: -1, p: 0, l: 0}), (181, {b: '', e: -1, p: 0, l: 0}), (182, {b: '', e: 1, p: 220, l: 0}), (183, {b: '', e: 1, p: 220, l: 0}), (184, {b: '', e: 1, p: 220, l: 0}), (185, {b: '', e: 1, p: 110, l: 0}), (186, {b: '', e: 1, p: 110, l: 0}), (187, {b: '', e: 1, p: 0, l: 0}), (188, {b: '', e: 1, p: 0, l: 0}), (189, {b: '', e: 1, p: 0, l: 0}), (190, {b: '', e: 1, p: 0, l: 0}), (191, {b: '', e: 1, p: 0, l: 0}), (192, {b: '', e: 1, p: 0, l: 0}), (193, {b: '', e: 1, p: 0, l: 0}), (194, {b: '', e: 1, p: 0, l: 0}), (195, {b: '', e: 1, p: 110, l: 0}), (196, {b: '', e: 1, p: 110, l: 0}), (197, {b: '', e: 1, p: 110, l: 0}), (198, {b: '', e: 1, p: 110, l: 0}), (199, {b: '', e: 1, p: 110, l: 0}), (200, {b: '', e: 1, p: 220, l: 0}), (201, {b: '', e: 500, p: 0, l: 0}), (202, {b: '', e: 500, p: 0, l: 0}), (203, {b: '', e: 500, p: 0, l: 0}), (204, {b: '', e: 1, p: 110, l: 0}), (205, {b: '', e: -1, p: 0, l: 0}), (206, {b: '', e: -1, p: 0, l: 0}), (207, {b: '', e: -1, p: 0, l: 0}), (208, {b: '', e: -1, p: 0, l: 0}), (209, {b: '', e: -1, p: 0, l: 0}),
    (210, {b: '', e: -1, p: 0, l: 0}), (211, {b: '', e: -1, p: 0, l: 0}), (212, {b: '', e: 1, p: 220, l: 0}), (213, {b: '', e: 1, p: 110, l: 0}), (214, {b: '', e: 1, p: 110, l: 0}), (215, {b: '', e: 1, p: 110, l: 0}), (216, {b: '', e: 1, p: 0, l: 0}), (217, {b: '', e: 1, p: 0, l: 0}), (218, {b: '', e: 1, p: 0, l: 0}), (219, {b: '', e: 1, p: 0, l: 0}), (220, {b: '', e: 300, p: 0, l: 0}), (221, {b: '', e: 300, p: 0, l: 0}), (222, {b: '', e: 1, p: 220, l: 0}), (223, {b: '', e: 1, p: 220, l: 0}), (224, {b: '', e: 1, p: 110, l: 0}), (225, {b: '', e: 1, p: 110, l: 0}), (226, {b: '', e: 1, p: 110, l: 0}), (227, {b: '', e: 1, p: 110, l: 0}), (228, {b: '', e: 1, p: 110, l: 0}), (229, {b: '', e: 1, p: 220, l: 0}), (230, {b: '', e: 1, p: 220, l: 0}), (231, {b: '', e: 500, p: 0, l: 0}), (232, {b: '', e: 1, p: 220, l: 0}), (233, {b: '', e: 1, p: 220, l: 0}), (234, {b: '', e: 1, p: 110, l: 0}), (235, {b: '', e: 1, p: 110, l: 0}), (236, {b: '', e: 1, p: 110, l: 0}), (237, {b: '', e: -1, p: 0, l: 0}), (238, {b: '', e: -1, p: 0, l: 0}), (239, {b: '', e: -1, p: 0, l: 0}),
    (240, {b: '', e: -1, p: 0, l: 0}), (241, {b: '', e: -1, p: 0, l: 0}), (242, {b: '', e: -1, p: 0, l: 0}), (243, {b: '', e: -1, p: 0, l: 0}), (244, {b: '', e: -1, p: 0, l: 0}), (245, {b: '', e: -1, p: 0, l: 0}), (246, {b: '', e: -1, p: 0, l: 0}), (247, {b: '', e: -1, p: 0, l: 0}), (248, {b: '', e: -1, p: 0, l: 0}), (249, {b: '', e: -1, p: 0, l: 0}), (250, {b: '', e: -1, p: 0, l: 0}), (251, {b: '', e: -1, p: 0, l: 0}), (252, {b: '', e: -1, p: 0, l: 0}), (253, {b: '', e: -1, p: 0, l: 0}), (254, {b: '', e: -1, p: 0, l: 0}), (255, {b: '', e: -1, p: 0, l: 0}), (256, {b: '', e: -1, p: 0, l: 0}), (257, {b: '', e: -1, p: 0, l: 0}), (258, {b: '', e: -1, p: 0, l: 0}), (259, {b: '', e: -1, p: 0, l: 0}), (260, {b: '', e: -1, p: 0, l: 0}), (261, {b: '', e: -1, p: 0, l: 0}), (262, {b: '', e: -1, p: 0, l: 0}), (263, {b: '', e: -1, p: 0, l: 0}), (264, {b: '', e: -1, p: 0, l: 0}), (265, {b: '', e: -1, p: 0, l: 0}), (266, {b: '', e: -1, p: 0, l: 0}), (267, {b: '', e: -1, p: 0, l: 0}), (268, {b: '', e: -1, p: 0, l: 0}), (269, {b: '', e: -1, p: 0, l: 0}),
    (270, {b: '', e: -1, p: 0, l: 0}), (271, {b: '', e: -1, p: 0, l: 0}), (272, {b: '', e: -1, p: 0, l: 0}), (273, {b: '', e: -1, p: 0, l: 0}), (274, {b: '', e: -1, p: 0, l: 0}), (275, {b: '', e: -1, p: 0, l: 0}), (276, {b: '', e: -1, p: 0, l: 0}), (277, {b: '', e: -1, p: 0, l: 0}), (278, {b: '', e: -1, p: 0, l: 0}), (279, {b: '', e: -1, p: 0, l: 0}), (280, {b: '', e: -1, p: 0, l: 0}), (281, {b: '', e: -1, p: 0, l: 0}), (282, {b: '', e: -1, p: 0, l: 0}), (283, {b: '', e: -1, p: 0, l: 0}), (284, {b: '', e: -1, p: 0, l: 0}), (285, {b: '', e: -1, p: 0, l: 0}), (286, {b: '', e: -1, p: 0, l: 0}), (287, {b: '', e: -1, p: 0, l: 0}), (288, {b: '', e: -1, p: 0, l: 0}), (289, {b: '', e: -1, p: 0, l: 0}), (290, {b: '', e: -1, p: 0, l: 0}), (291, {b: '', e: -1, p: 0, l: 0}), (292, {b: '', e: -1, p: 0, l: 0}), (293, {b: '', e: -1, p: 0, l: 0}), (294, {b: '', e: -1, p: 0, l: 0}), (295, {b: '', e: -1, p: 0, l: 0}), (296, {b: '', e: -1, p: 0, l: 0}), (297, {b: '', e: -1, p: 0, l: 0}), (298, {b: '', e: -1, p: 0, l: 0}), (299, {b: '', e: -1, p: 0, l: 0}),
    (300, {b: '', e: -1, p: 0, l: 0}), (301, {b: '', e: -1, p: 0, l: 0}), (302, {b: '', e: -1, p: 0, l: 0}), (303, {b: '', e: -1, p: 0, l: 0}), (304, {b: '', e: -1, p: 0, l: 0}), (305, {b: '', e: -1, p: 0, l: 0}), (306, {b: '', e: -1, p: 0, l: 0}), (307, {b: '', e: -1, p: 0, l: 0}), (308, {b: '', e: -1, p: 0, l: 0}), (309, {b: '', e: -1, p: 0, l: 0}), (310, {b: '', e: -1, p: 0, l: 0}), (311, {b: '', e: -1, p: 0, l: 0}), (312, {b: '', e: -1, p: 0, l: 0}), (313, {b: '', e: -1, p: 0, l: 0}), (314, {b: '', e: -1, p: 0, l: 0}), (315, {b: '', e: -1, p: 0, l: 0}), (316, {b: '', e: -1, p: 0, l: 0}), (317, {b: '', e: -1, p: 0, l: 0}), (318, {b: '', e: -1, p: 0, l: 0}), (319, {b: '', e: -1, p: 0, l: 0}), (320, {b: '', e: -1, p: 0, l: 0}), (321, {b: '', e: -1, p: 0, l: 0}), (322, {b: '', e: -1, p: 0, l: 0}), (323, {b: '', e: -1, p: 0, l: 0}), (324, {b: '', e: -1, p: 0, l: 0}), (325, {b: '', e: -1, p: 0, l: 0}), (326, {b: '', e: -1, p: 0, l: 0}), (327, {b: '', e: -1, p: 0, l: 0}), (328, {b: '', e: -1, p: 0, l: 0}), (329, {b: '', e: -1, p: 0, l: 0}),
    (330, {b: '', e: -1, p: 0, l: 0}), (331, {b: '', e: -1, p: 0, l: 0}), (332, {b: '', e: -1, p: 0, l: 0}), (333, {b: '', e: -1, p: 0, l: 0}), (334, {b: '', e: -1, p: 0, l: 0}), (335, {b: '', e: -1, p: 0, l: 0}), (336, {b: '', e: -1, p: 0, l: 0}), (337, {b: '', e: -1, p: 0, l: 0}), (338, {b: '', e: -1, p: 0, l: 0}), (339, {b: '', e: -1, p: 0, l: 0}), (340, {b: '', e: -1, p: 0, l: 0}), (341, {b: '', e: -1, p: 0, l: 0}), (342, {b: '', e: -1, p: 0, l: 0}), (343, {b: '', e: -1, p: 0, l: 0}), (344, {b: '', e: -1, p: 0, l: 0}), (345, {b: '', e: -1, p: 0, l: 0}), (346, {b: '', e: -1, p: 0, l: 0}), (347, {b: '', e: -1, p: 0, l: 0}), (348, {b: '', e: -1, p: 0, l: 0}), (349, {b: '', e: -1, p: 0, l: 0}), (350, {b: '', e: -1, p: 0, l: 0}), (351, {b: '', e: -1, p: 0, l: 0}), (352, {b: '', e: -1, p: 0, l: 0}), (353, {b: '', e: -1, p: 0, l: 0}), (354, {b: '', e: -1, p: 0, l: 0}), (355, {b: '', e: -1, p: 0, l: 0}), (356, {b: '', e: -1, p: 0, l: 0}), (357, {b: '', e: -1, p: 0, l: 0}), (358, {b: '', e: -1, p: 0, l: 0}), (359, {b: '', e: -1, p: 0, l: 0}),
    (360, {b: '', e: -1, p: 0, l: 0}), (361, {b: '', e: -1, p: 0, l: 0}), (362, {b: '', e: -1, p: 0, l: 0}), (363, {b: '', e: -1, p: 0, l: 0}), (364, {b: '', e: -1, p: 0, l: 0}), (365, {b: '', e: -1, p: 0, l: 0}), (366, {b: '', e: -1, p: 0, l: 0}), (367, {b: '', e: -1, p: 0, l: 0}), (368, {b: '', e: -1, p: 0, l: 0}), (369, {b: '', e: -1, p: 0, l: 0}), (370, {b: '', e: -1, p: 0, l: 0}), (371, {b: '', e: -1, p: 0, l: 0}), (372, {b: '', e: -1, p: 0, l: 0}), (373, {b: '', e: -1, p: 0, l: 0}), (374, {b: '', e: -1, p: 0, l: 0}), (375, {b: '', e: -1, p: 0, l: 0}), (376, {b: '', e: -1, p: 0, l: 0}), (377, {b: '', e: -1, p: 0, l: 0}), (378, {b: '', e: -1, p: 0, l: 0}), (379, {b: '', e: -1, p: 0, l: 0}), (380, {b: '', e: -1, p: 0, l: 0}), (381, {b: '', e: -1, p: 0, l: 0}), (382, {b: '', e: -1, p: 0, l: 0}), (383, {b: '', e: -1, p: 0, l: 0}), (384, {b: '', e: -1, p: 0, l: 0}), (385, {b: '', e: -1, p: 0, l: 0}), (386, {b: '', e: -1, p: 0, l: 0}), (387, {b: '', e: -1, p: 0, l: 0}), (388, {b: '', e: -1, p: 0, l: 0}), (389, {b: '', e: -1, p: 0, l: 0}),
    (390, {b: '', e: -1, p: 0, l: 0}), (391, {b: '', e: -1, p: 0, l: 0}), (392, {b: '', e: -1, p: 0, l: 0}), (393, {b: '', e: -1, p: 0, l: 0}), (394, {b: '', e: -1, p: 0, l: 0}), (395, {b: '', e: -1, p: 0, l: 0}), (396, {b: '', e: -1, p: 0, l: 0}), (397, {b: '', e: -1, p: 0, l: 0}), (398, {b: '', e: -1, p: 0, l: 0}), (399, {b: '', e: -1, p: 0, l: 0}), (400, {b: '', e: -1, p: 0, l: 0}), (401, {b: '', e: -1, p: 0, l: 0}), (402, {b: '', e: -1, p: 0, l: 0}), (403, {b: '', e: -1, p: 0, l: 0}), (404, {b: '', e: -1, p: 0, l: 0}), (405, {b: '', e: -1, p: 0, l: 0}), (406, {b: '', e: -1, p: 0, l: 0}), (407, {b: '', e: -1, p: 0, l: 0}), (408, {b: '', e: -1, p: 0, l: 0}), (409, {b: '', e: -1, p: 0, l: 0}), (410, {b: '', e: -1, p: 0, l: 0}), (411, {b: '', e: -1, p: 0, l: 0}), (412, {b: '', e: -1, p: 0, l: 0}), (413, {b: '', e: -1, p: 0, l: 0}), (414, {b: '', e: -1, p: 0, l: 0}), (415, {b: '', e: -1, p: 0, l: 0}), (416, {b: '', e: -1, p: 0, l: 0}), (417, {b: '', e: -1, p: 0, l: 0}), (418, {b: '', e: -1, p: 0, l: 0}), (419, {b: '', e: -1, p: 0, l: 0}),
    (420, {b: '', e: -1, p: 0, l: 0}), (421, {b: '', e: -1, p: 0, l: 0}), (422, {b: '', e: -1, p: 0, l: 0}), (423, {b: '', e: -1, p: 0, l: 0}), (424, {b: '', e: -1, p: 0, l: 0}), (425, {b: '', e: -1, p: 0, l: 0}), (426, {b: '', e: -1, p: 0, l: 0}), (427, {b: '', e: -1, p: 0, l: 0}), (428, {b: '', e: -1, p: 0, l: 0}), (429, {b: '', e: -1, p: 0, l: 0}), (430, {b: '', e: -1, p: 0, l: 0}), (431, {b: '', e: -1, p: 0, l: 0}), (432, {b: '', e: -1, p: 0, l: 0}), (433, {b: '', e: -1, p: 0, l: 0}), (434, {b: '', e: -1, p: 0, l: 0}), (435, {b: '', e: -1, p: 0, l: 0}), (436, {b: '', e: -1, p: 0, l: 0}), (437, {b: '', e: -1, p: 0, l: 0}), (438, {b: '', e: -1, p: 0, l: 0}), (439, {b: '', e: -1, p: 0, l: 0}), (440, {b: '', e: -1, p: 0, l: 0}), (441, {b: '', e: -1, p: 0, l: 0}), (442, {b: '', e: -1, p: 0, l: 0}), (443, {b: '', e: -1, p: 0, l: 0}), (444, {b: '', e: -1, p: 0, l: 0}), (445, {b: '', e: -1, p: 0, l: 0}), (446, {b: '', e: -1, p: 0, l: 0}), (447, {b: '', e: -1, p: 0, l: 0}), (448, {b: '', e: -1, p: 0, l: 0}), (449, {b: '', e: -1, p: 0, l: 0}),
    (450, {b: '', e: -1, p: 0, l: 0}), (451, {b: '', e: -1, p: 0, l: 0}), (452, {b: '', e: -1, p: 0, l: 0}), (453, {b: '', e: -1, p: 0, l: 0}), (454, {b: '', e: -1, p: 0, l: 0}), (455, {b: '', e: -1, p: 0, l: 0}), (456, {b: '', e: -1, p: 0, l: 0}), (457, {b: '', e: -1, p: 0, l: 0}), (458, {b: '', e: -1, p: 0, l: 0}), (459, {b: '', e: -1, p: 0, l: 0}), (460, {b: '', e: -1, p: 0, l: 0}), (461, {b: '', e: -1, p: 0, l: 0}), (462, {b: '', e: -1, p: 0, l: 0}), (463, {b: '', e: -1, p: 0, l: 0}), (464, {b: '', e: -1, p: 0, l: 0}), (465, {b: '', e: -1, p: 0, l: 0}), (466, {b: '', e: -1, p: 0, l: 0}), (467, {b: '', e: -1, p: 0, l: 0}), (468, {b: '', e: -1, p: 0, l: 0}), (469, {b: '', e: -1, p: 0, l: 0}), (470, {b: '', e: -1, p: 0, l: 0}), (471, {b: '', e: -1, p: 0, l: 0}), (472, {b: '', e: -1, p: 0, l: 0}), (473, {b: '', e: -1, p: 0, l: 0}), (474, {b: '', e: -1, p: 0, l: 0}), (475, {b: '', e: -1, p: 0, l: 0}), (476, {b: '', e: -1, p: 0, l: 0}), (477, {b: '', e: -1, p: 0, l: 0}), (478, {b: '', e: -1, p: 0, l: 0}), (479, {b: '', e: -1, p: 0, l: 0}),
    (480, {b: '', e: -1, p: 0, l: 0}), (481, {b: '', e: -1, p: 0, l: 0}), (482, {b: '', e: -1, p: 0, l: 0}), (483, {b: '', e: -1, p: 0, l: 0}), (484, {b: '', e: -1, p: 0, l: 0}), (485, {b: '', e: -1, p: 0, l: 0}), (486, {b: '', e: -1, p: 0, l: 0}), (487, {b: '', e: -1, p: 0, l: 0}), (488, {b: '', e: -1, p: 0, l: 0}), (489, {b: '', e: -1, p: 0, l: 0}), (490, {b: '', e: -1, p: 0, l: 0}), (491, {b: '', e: -1, p: 0, l: 0}), (492, {b: '', e: -1, p: 0, l: 0}), (493, {b: '', e: -1, p: 0, l: 0}), (494, {b: '', e: -1, p: 0, l: 0}), (495, {b: '', e: -1, p: 0, l: 0}), (496, {b: '', e: -1, p: 0, l: 0}), (497, {b: '', e: -1, p: 0, l: 0}), (498, {b: '', e: -1, p: 0, l: 0}), (499, {b: '', e: -1, p: 0, l: 0}), (500, {b: '', e: -1, p: 0, l: 0}), (501, {b: '', e: -1, p: 0, l: 0}), (502, {b: '', e: -1, p: 0, l: 0}), (503, {b: '', e: -1, p: 0, l: 0}), (504, {b: '', e: -1, p: 0, l: 0}), (505, {b: '', e: -1, p: 0, l: 0}), (506, {b: '', e: -1, p: 0, l: 0}), (507, {b: '', e: -1, p: 0, l: 0}), (508, {b: '', e: -1, p: 0, l: 0}), (509, {b: '', e: -1, p: 0, l: 0}),
    (510, {b: '', e: -1, p: 0, l: 0}), (511, {b: '', e: -1, p: 0, l: 0}), (512, {b: '', e: -1, p: 0, l: 0}), (513, {b: '', e: -1, p: 0, l: 0}), (514, {b: '', e: -1, p: 0, l: 0}), (515, {b: '', e: -1, p: 0, l: 0}), (516, {b: '', e: -1, p: 0, l: 0}), (517, {b: '', e: -1, p: 0, l: 0}), (518, {b: '', e: -1, p: 0, l: 0}), (519, {b: '', e: -1, p: 0, l: 0}), (520, {b: '', e: -1, p: 0, l: 0}), (521, {b: '', e: -1, p: 0, l: 0}), (522, {b: '', e: -1, p: 0, l: 0}), (523, {b: '', e: -1, p: 0, l: 0}), (524, {b: '', e: -1, p: 0, l: 0}), (525, {b: '', e: -1, p: 0, l: 0}), (526, {b: '', e: -1, p: 0, l: 0}), (527, {b: '', e: -1, p: 0, l: 0}), (528, {b: '', e: -1, p: 0, l: 0}), (529, {b: '', e: -1, p: 0, l: 0}), (530, {b: '', e: -1, p: 0, l: 0}), (531, {b: '', e: -1, p: 0, l: 0}), (532, {b: '', e: -1, p: 0, l: 0}), (533, {b: '', e: -1, p: 0, l: 0}), (534, {b: '', e: -1, p: 0, l: 0}), (535, {b: '', e: -1, p: 0, l: 0}), (536, {b: '', e: -1, p: 0, l: 0}), (537, {b: '', e: -1, p: 0, l: 0}), (538, {b: '', e: -1, p: 0, l: 0}), (539, {b: '', e: -1, p: 0, l: 0}),
    (540, {b: '', e: -1, p: 0, l: 0}), (541, {b: '', e: -1, p: 0, l: 0}), (542, {b: '', e: -1, p: 0, l: 0}), (543, {b: '', e: -1, p: 0, l: 0}), (544, {b: '', e: -1, p: 0, l: 0}), (545, {b: '', e: -1, p: 0, l: 0}), (546, {b: '', e: -1, p: 0, l: 0}), (547, {b: '', e: -1, p: 0, l: 0}), (548, {b: '', e: -1, p: 0, l: 0}), (549, {b: '', e: -1, p: 0, l: 0}), (550, {b: '', e: -1, p: 0, l: 0}), (551, {b: '', e: -1, p: 0, l: 0}), (552, {b: '', e: -1, p: 0, l: 0}), (553, {b: '', e: -1, p: 0, l: 0}), (554, {b: '', e: -1, p: 0, l: 0}), (555, {b: '', e: -1, p: 0, l: 0}), (556, {b: '', e: -1, p: 0, l: 0}), (557, {b: '', e: -1, p: 0, l: 0}), (558, {b: '', e: -1, p: 0, l: 0}), (559, {b: '', e: -1, p: 0, l: 0}), (560, {b: '', e: -1, p: 0, l: 0}), (561, {b: '', e: -1, p: 0, l: 0}), (562, {b: '', e: -1, p: 0, l: 0}), (563, {b: '', e: -1, p: 0, l: 0}), (564, {b: '', e: -1, p: 0, l: 0}), (565, {b: '', e: -1, p: 0, l: 0}), (566, {b: '', e: -1, p: 0, l: 0}), (567, {b: '', e: -1, p: 0, l: 0}), (568, {b: '', e: -1, p: 0, l: 0}), (569, {b: '', e: -1, p: 0, l: 0}),
    (570, {b: '', e: -1, p: 0, l: 0}), (571, {b: '', e: -1, p: 0, l: 0}), (572, {b: '', e: -1, p: 0, l: 0}), (573, {b: '', e: -1, p: 0, l: 0}), (574, {b: '', e: -1, p: 0, l: 0}), (575, {b: '', e: -1, p: 0, l: 0}), (576, {b: '', e: -1, p: 0, l: 0}), (577, {b: '', e: -1, p: 0, l: 0}), (578, {b: '', e: -1, p: 0, l: 0}), (579, {b: '', e: -1, p: 0, l: 0}), (580, {b: '', e: -1, p: 0, l: 0}), (581, {b: '', e: -1, p: 0, l: 0}), (582, {b: '', e: -1, p: 0, l: 0}), (583, {b: '', e: -1, p: 0, l: 0}), (584, {b: '', e: -1, p: 0, l: 0}), (585, {b: '', e: -1, p: 0, l: 0}), (586, {b: '', e: -1, p: 0, l: 0}), (587, {b: '', e: -1, p: 0, l: 0}), (588, {b: '', e: -1, p: 0, l: 0}), (589, {b: '', e: -1, p: 0, l: 0}), (590, {b: '', e: -1, p: 0, l: 0}), (591, {b: '', e: -1, p: 0, l: 0}), (592, {b: '', e: -1, p: 0, l: 0}), (593, {b: '', e: -1, p: 0, l: 0}), (594, {b: '', e: -1, p: 0, l: 0}), (595, {b: '', e: -1, p: 0, l: 0}), (596, {b: '', e: -1, p: 0, l: 0}), (597, {b: '', e: -1, p: 0, l: 0}), (598, {b: '', e: -1, p: 0, l: 0}), (599, {b: '', e: -1, p: 0, l: 0}),
    (600, {b: '', e: -1, p: 0, l: 0}), (601, {b: '', e: -1, p: 0, l: 0}), (602, {b: '', e: -1, p: 0, l: 0}), (603, {b: '', e: -1, p: 0, l: 0}), (604, {b: '', e: -1, p: 0, l: 0}), (605, {b: '', e: -1, p: 0, l: 0}), (606, {b: '', e: -1, p: 0, l: 0}), (607, {b: '', e: -1, p: 0, l: 0}), (608, {b: '', e: -1, p: 0, l: 0}), (609, {b: '', e: -1, p: 0, l: 0}), (610, {b: '', e: -1, p: 0, l: 0}), (611, {b: '', e: -1, p: 0, l: 0}), (612, {b: '', e: -1, p: 0, l: 0}), (613, {b: '', e: -1, p: 0, l: 0}), (614, {b: '', e: -1, p: 0, l: 0}), (615, {b: '', e: -1, p: 0, l: 0}), (616, {b: '', e: -1, p: 0, l: 0}), (617, {b: '', e: -1, p: 0, l: 0}), (618, {b: '', e: -1, p: 0, l: 0}), (619, {b: '', e: -1, p: 0, l: 0}), (620, {b: '', e: -1, p: 0, l: 0}), (621, {b: '', e: -1, p: 0, l: 0}), (622, {b: '', e: -1, p: 0, l: 0}), (623, {b: '', e: -1, p: 0, l: 0}), (624, {b: '', e: -1, p: 0, l: 0}), (625, {b: '', e: -1, p: 0, l: 0}), (626, {b: '', e: -1, p: 0, l: 0}), (627, {b: '', e: -1, p: 0, l: 0}), (628, {b: '', e: -1, p: 0, l: 0}), (629, {b: '', e: -1, p: 0, l: 0}),
    (630, {b: '', e: -1, p: 0, l: 0}), (631, {b: '', e: -1, p: 0, l: 0}), (632, {b: '', e: -1, p: 0, l: 0}), (633, {b: '', e: -1, p: 0, l: 0}), (634, {b: '', e: -1, p: 0, l: 0}), (635, {b: '', e: -1, p: 0, l: 0}), (636, {b: '', e: -1, p: 0, l: 0}), (637, {b: '', e: -1, p: 0, l: 0}), (638, {b: '', e: -1, p: 0, l: 0}), (639, {b: '', e: -1, p: 0, l: 0}), (640, {b: '', e: -1, p: 0, l: 0}), (641, {b: '', e: -1, p: 0, l: 0}), (642, {b: '', e: -1, p: 0, l: 0}), (643, {b: '', e: -1, p: 0, l: 0}), (644, {b: '', e: -1, p: 0, l: 0}), (645, {b: '', e: -1, p: 0, l: 0}), (646, {b: '', e: -1, p: 0, l: 0}), (647, {b: '', e: -1, p: 0, l: 0}), (648, {b: '', e: -1, p: 0, l: 0}), (649, {b: '', e: -1, p: 0, l: 0}), (650, {b: '', e: -1, p: 0, l: 0}), (651, {b: '', e: -1, p: 0, l: 0}), (652, {b: '', e: -1, p: 0, l: 0}), (653, {b: '', e: -1, p: 0, l: 0}), (654, {b: '', e: -1, p: 0, l: 0}), (655, {b: '', e: -1, p: 0, l: 0}), (656, {b: '', e: -1, p: 0, l: 0}), (657, {b: '', e: -1, p: 0, l: 0}), (658, {b: '', e: -1, p: 0, l: 0}), (659, {b: '', e: -1, p: 0, l: 0}),
    (660, {b: '', e: -1, p: 0, l: 0}), (661, {b: '', e: -1, p: 0, l: 0}), (662, {b: '', e: -1, p: 0, l: 0}), (663, {b: '', e: -1, p: 0, l: 0}), (664, {b: '', e: -1, p: 0, l: 0}), (665, {b: '', e: -1, p: 0, l: 0}), (666, {b: '', e: -1, p: 0, l: 0}), (667, {b: '', e: -1, p: 0, l: 0}), (668, {b: '', e: -1, p: 0, l: 0}), (669, {b: '', e: -1, p: 0, l: 0}), (670, {b: '', e: -1, p: 0, l: 0}), (671, {b: '', e: -1, p: 0, l: 0}), (672, {b: '', e: -1, p: 0, l: 0}), (673, {b: '', e: -1, p: 0, l: 0}), (674, {b: '', e: -1, p: 0, l: 0}), (675, {b: '', e: -1, p: 0, l: 0}), (676, {b: '', e: -1, p: 0, l: 0}), (677, {b: '', e: -1, p: 0, l: 0}), (678, {b: '', e: -1, p: 0, l: 0}), (679, {b: '', e: -1, p: 0, l: 0}), (680, {b: '', e: -1, p: 0, l: 0}), (681, {b: '', e: -1, p: 0, l: 0}), (682, {b: '', e: -1, p: 0, l: 0}), (683, {b: '', e: -1, p: 0, l: 0}), (684, {b: '', e: -1, p: 0, l: 0}), (685, {b: '', e: -1, p: 0, l: 0}), (686, {b: '', e: -1, p: 0, l: 0}), (687, {b: '', e: -1, p: 0, l: 0}), (688, {b: '', e: -1, p: 0, l: 0}), (689, {b: '', e: -1, p: 0, l: 0}),
    (690, {b: '', e: -1, p: 0, l: 0}), (691, {b: '', e: -1, p: 0, l: 0}), (692, {b: '', e: -1, p: 0, l: 0}), (693, {b: '', e: -1, p: 0, l: 0}), (694, {b: '', e: -1, p: 0, l: 0}), (695, {b: '', e: -1, p: 0, l: 0}), (696, {b: '', e: -1, p: 0, l: 0}), (697, {b: '', e: -1, p: 0, l: 0}), (698, {b: '', e: -1, p: 0, l: 0}), (699, {b: '', e: -1, p: 0, l: 0}), (700, {b: '', e: -1, p: 0, l: 0}), (701, {b: '', e: -1, p: 0, l: 0}), (702, {b: '', e: -1, p: 0, l: 0}), (703, {b: '', e: -1, p: 0, l: 0}), (704, {b: '', e: -1, p: 0, l: 0}), (705, {b: '', e: -1, p: 0, l: 0}), (706, {b: '', e: -1, p: 0, l: 0}), (707, {b: '', e: -1, p: 0, l: 0}), (708, {b: '', e: -1, p: 0, l: 0}), (709, {b: '', e: -1, p: 0, l: 0}), (710, {b: '', e: -1, p: 0, l: 0}), (711, {b: '', e: -1, p: 0, l: 0}), (712, {b: '', e: -1, p: 0, l: 0}), (713, {b: '', e: -1, p: 0, l: 0}), (714, {b: '', e: -1, p: 0, l: 0}), (715, {b: '', e: -1, p: 0, l: 0}), (716, {b: '', e: -1, p: 0, l: 0}), (717, {b: '', e: -1, p: 0, l: 0}), (718, {b: '', e: -1, p: 0, l: 0}), (719, {b: '', e: -1, p: 0, l: 0}),
    (720, {b: '', e: -1, p: 0, l: 0}), (721, {b: '', e: -1, p: 0, l: 0}), (722, {b: '', e: -1, p: 0, l: 0}), (723, {b: '', e: -1, p: 0, l: 0}), (724, {b: '', e: -1, p: 0, l: 0}), (725, {b: '', e: -1, p: 0, l: 0}), (726, {b: '', e: -1, p: 0, l: 0}), (727, {b: '', e: -1, p: 0, l: 0}), (728, {b: '', e: -1, p: 0, l: 0}), (729, {b: '', e: -1, p: 0, l: 0}), (730, {b: '', e: -1, p: 0, l: 0}), (731, {b: '', e: -1, p: 0, l: 0}), (732, {b: '', e: -1, p: 0, l: 0}), (733, {b: '', e: -1, p: 0, l: 0}), (734, {b: '', e: -1, p: 0, l: 0}), (735, {b: '', e: -1, p: 0, l: 0}), (736, {b: '', e: -1, p: 0, l: 0}), (737, {b: '', e: -1, p: 0, l: 0}), (738, {b: '', e: -1, p: 0, l: 0}), (739, {b: '', e: -1, p: 0, l: 0}), (740, {b: '', e: -1, p: 0, l: 0}), (741, {b: '', e: -1, p: 0, l: 0}), (742, {b: '', e: -1, p: 0, l: 0}), (743, {b: '', e: -1, p: 0, l: 0}), (744, {b: '', e: -1, p: 0, l: 0}), (745, {b: '', e: -1, p: 0, l: 0}), (746, {b: '', e: -1, p: 0, l: 0}), (747, {b: '', e: -1, p: 0, l: 0}), (748, {b: '', e: -1, p: 0, l: 0}), (749, {b: '', e: -1, p: 0, l: 0}),
    (750, {b: '', e: -1, p: 0, l: 0}), (751, {b: '', e: -1, p: 0, l: 0}), (752, {b: '', e: -1, p: 0, l: 0}), (753, {b: '', e: -1, p: 0, l: 0}), (754, {b: '', e: -1, p: 0, l: 0}), (755, {b: '', e: -1, p: 0, l: 0}), (756, {b: '', e: -1, p: 0, l: 0}), (757, {b: '', e: -1, p: 0, l: 0}), (758, {b: '', e: -1, p: 0, l: 0}), (759, {b: '', e: -1, p: 0, l: 0}), (760, {b: '', e: -1, p: 0, l: 0}), (761, {b: '', e: -1, p: 0, l: 0}), (762, {b: '', e: -1, p: 0, l: 0}), (763, {b: '', e: -1, p: 0, l: 0}), (764, {b: '', e: -1, p: 0, l: 0}), (765, {b: '', e: -1, p: 0, l: 0}), (766, {b: '', e: -1, p: 0, l: 0}), (767, {b: '', e: -1, p: 0, l: 0}), (768, {b: '', e: -1, p: 0, l: 0}), (769, {b: '', e: -1, p: 0, l: 0}), (770, {b: '', e: -1, p: 0, l: 0}), (771, {b: '', e: -1, p: 0, l: 0}), (772, {b: '', e: -1, p: 0, l: 0}), (773, {b: '', e: -1, p: 0, l: 0}), (774, {b: '', e: -1, p: 0, l: 0}), (775, {b: '', e: -1, p: 0, l: 0}), (776, {b: '', e: -1, p: 0, l: 0}), (777, {b: '', e: -1, p: 0, l: 0}), (778, {b: '', e: -1, p: 0, l: 0}), (779, {b: '', e: -1, p: 0, l: 0}),
    (780, {b: '', e: -1, p: 0, l: 0}), (781, {b: '', e: -1, p: 0, l: 0}), (782, {b: '', e: -1, p: 0, l: 0}), (783, {b: '', e: -1, p: 0, l: 0}), (784, {b: '', e: -1, p: 0, l: 0}), (785, {b: '', e: -1, p: 0, l: 0}), (786, {b: '', e: -1, p: 0, l: 0}), (787, {b: '', e: -1, p: 0, l: 0}), (788, {b: '', e: -1, p: 0, l: 0}), (789, {b: '', e: -1, p: 0, l: 0}), (790, {b: '', e: -1, p: 0, l: 0}), (791, {b: '', e: -1, p: 0, l: 0}), (792, {b: '', e: -1, p: 0, l: 0}), (793, {b: '', e: -1, p: 0, l: 0}), (794, {b: '', e: -1, p: 0, l: 0}), (795, {b: '', e: -1, p: 0, l: 0}), (796, {b: '', e: -1, p: 0, l: 0}), (797, {b: '', e: -1, p: 0, l: 0}), (798, {b: '', e: -1, p: 0, l: 0}), (799, {b: '', e: -1, p: 0, l: 0}), (800, {b: '', e: -1, p: 0, l: 0}), (801, {b: '', e: -1, p: 0, l: 0}), (802, {b: '', e: -1, p: 0, l: 0}), (803, {b: '', e: -1, p: 0, l: 0}), (804, {b: '', e: -1, p: 0, l: 0}), (805, {b: '', e: -1, p: 0, l: 0}), (806, {b: '', e: -1, p: 0, l: 0}), (807, {b: '', e: -1, p: 0, l: 0}), (808, {b: '', e: -1, p: 0, l: 0}), (809, {b: '', e: -1, p: 0, l: 0}),
    (810, {b: '', e: -1, p: 0, l: 0}), (811, {b: '', e: -1, p: 0, l: 0}), (812, {b: '', e: -1, p: 0, l: 0}), (813, {b: '', e: -1, p: 0, l: 0}), (814, {b: '', e: -1, p: 0, l: 0}), (815, {b: '', e: -1, p: 0, l: 0}), (816, {b: '', e: -1, p: 0, l: 0}), (817, {b: '', e: -1, p: 0, l: 0}), (818, {b: '', e: -1, p: 0, l: 0}), (819, {b: '', e: -1, p: 0, l: 0}), (820, {b: '', e: -1, p: 0, l: 0}), (821, {b: '', e: -1, p: 0, l: 0}), (822, {b: '', e: -1, p: 0, l: 0}), (823, {b: '', e: -1, p: 0, l: 0}), (824, {b: '', e: -1, p: 0, l: 0}), (825, {b: '', e: -1, p: 0, l: 0}), (826, {b: '', e: -1, p: 0, l: 0}), (827, {b: '', e: -1, p: 0, l: 0}), (828, {b: '', e: -1, p: 0, l: 0}), (829, {b: '', e: -1, p: 0, l: 0}), (830, {b: '', e: -1, p: 0, l: 0}), (831, {b: '', e: -1, p: 0, l: 0}), (832, {b: '', e: -1, p: 0, l: 0}), (833, {b: '', e: -1, p: 0, l: 0}), (834, {b: '', e: -1, p: 0, l: 0}), (835, {b: '', e: -1, p: 0, l: 0}), (836, {b: '', e: -1, p: 0, l: 0}), (837, {b: '', e: -1, p: 0, l: 0}), (838, {b: '', e: -1, p: 0, l: 0}), (839, {b: '', e: -1, p: 0, l: 0}),
    (840, {b: '', e: -1, p: 0, l: 0}), (841, {b: '', e: -1, p: 0, l: 0}), (842, {b: '', e: -1, p: 0, l: 0}), (843, {b: '', e: -1, p: 0, l: 0}), (844, {b: '', e: -1, p: 0, l: 0}), (845, {b: '', e: -1, p: 0, l: 0}), (846, {b: '', e: -1, p: 0, l: 0}), (847, {b: '', e: -1, p: 0, l: 0}), (848, {b: '', e: -1, p: 0, l: 0}), (849, {b: '', e: -1, p: 0, l: 0}), (850, {b: '', e: -1, p: 0, l: 0}), (851, {b: '', e: -1, p: 0, l: 0}), (852, {b: '', e: -1, p: 0, l: 0}), (853, {b: '', e: -1, p: 0, l: 0}), (854, {b: '', e: -1, p: 0, l: 0}), (855, {b: '', e: -1, p: 0, l: 0}), (856, {b: '', e: -1, p: 0, l: 0}), (857, {b: '', e: -1, p: 0, l: 0}), (858, {b: '', e: -1, p: 0, l: 0}), (859, {b: '', e: -1, p: 0, l: 0}), (860, {b: '', e: -1, p: 0, l: 0}), (861, {b: '', e: -1, p: 0, l: 0}), (862, {b: '', e: -1, p: 0, l: 0}), (863, {b: '', e: -1, p: 0, l: 0}), (864, {b: '', e: -1, p: 0, l: 0}), (865, {b: '', e: -1, p: 0, l: 0}), (866, {b: '', e: -1, p: 0, l: 0}), (867, {b: '', e: -1, p: 0, l: 0}), (868, {b: '', e: -1, p: 0, l: 0}), (869, {b: '', e: -1, p: 0, l: 0}),
    (870, {b: '', e: -1, p: 0, l: 0}), (871, {b: '', e: -1, p: 0, l: 0}), (872, {b: '', e: -1, p: 0, l: 0}), (873, {b: '', e: -1, p: 0, l: 0}), (874, {b: '', e: -1, p: 0, l: 0}), (875, {b: '', e: -1, p: 0, l: 0}), (876, {b: '', e: -1, p: 0, l: 0}), (877, {b: '', e: -1, p: 0, l: 0}), (878, {b: '', e: -1, p: 0, l: 0}), (879, {b: '', e: -1, p: 0, l: 0}), (880, {b: '', e: -1, p: 0, l: 0}), (881, {b: '', e: -1, p: 0, l: 0}), (882, {b: '', e: -1, p: 0, l: 0}), (883, {b: '', e: -1, p: 0, l: 0}), (884, {b: '', e: -1, p: 0, l: 0}), (885, {b: '', e: -1, p: 0, l: 0}), (886, {b: '', e: -1, p: 0, l: 0}), (887, {b: '', e: -1, p: 0, l: 0}), (888, {b: '', e: -1, p: 0, l: 0}), (889, {b: '', e: -1, p: 0, l: 0}), (890, {b: '', e: -1, p: 0, l: 0}), (891, {b: '', e: -1, p: 0, l: 0}), (892, {b: '', e: -1, p: 0, l: 0}), (893, {b: '', e: -1, p: 0, l: 0}), (894, {b: '', e: -1, p: 0, l: 0}), (895, {b: '', e: -1, p: 0, l: 0}), (896, {b: '', e: -1, p: 0, l: 0}), (897, {b: '', e: -1, p: 0, l: 0}), (898, {b: '', e: -1, p: 0, l: 0}), (899, {b: '', e: -1, p: 0, l: 0})
]


# elevation is 10 meters (aka 60 == 600m)
# precipitation is in average cm of rainfall per year
# G.add_nodes_from(range(900), biome='', elevation=-1, precipitation=0, latitude=0)
G.add_nodes_from(tempMap)

elevationShape = 2
elevationScale = 120
precipitationShape = 3
precipitationScale = 75


for j in range(30):
    for i in range(29):
        G.add_edge(i + j * 30, i + j * 30 + 1)
for j in range(29):
    for i in range(30):
        G.add_edge(i + j * 30, i + (j + 1) * 30)

# pos is a dictionary with positions for the visualization of the node graph
pos = {}
for j in range(31):
    for i in range(31):
        pos[i + j * 30] = (i, j)

colorMap = {}
nodes = list(G.nodes.data())
lat = -3
for n in nodes:
    if n[0] % 30 == 0:
        lat += 3
    # nx.set_node_attributes(G, {n[0]: {'elevation': random.default_rng().gamma(elevationShape, elevationScale) - 100,
    # 'precipitation': random.default_rng().gamma(precipitationShape, precipitationScale),
    # 'latitude': pos[n[0]][1] * 3}})
    nx.set_node_attributes(G, {n[0]: {'latitude': lat}})


for n in nodes:
    temperature = (((n[1]['elevation'] * -0.1 + 40) + (n[1]['latitude'] * -.5 + 30)) / 2)
    if n[1]['elevation'] < 0:
        nx.set_node_attributes(G, {n[0]: {'biome': 'ocean'}})
        colorMap.update({n[0]: 0})
    elif n[1]['elevation'] > 350:
        nx.set_node_attributes(G, {n[0]: {'biome': 'mountain'}})
        colorMap.update({n[0]: 9})
    elif temperature <= 5:
        if n[1]['precipitation'] <= 100:
            nx.set_node_attributes(G, {n[0]: {'biome': 'tundra'}})
            colorMap.update({n[0]: 1})
        else:
            nx.set_node_attributes(G, {n[0]: {'biome': 'borealForest'}})
            colorMap.update({n[0]: 2})
    elif temperature <= 20:
        if n[1]['precipitation'] <= 100:
            nx.set_node_attributes(G, {n[0]: {'biome': 'prairie'}})
            colorMap.update({n[0]: 3})
        elif n[1]['precipitation'] <= 200:
            nx.set_node_attributes(G, {n[0]: {'biome': 'shrubland'}})
            colorMap.update({n[0]: 4})
        else:
            nx.set_node_attributes(G, {n[0]: {'biome': 'temperateForest'}})
            colorMap.update({n[0]: 5})
    else:
        if n[1]['precipitation'] <= 100:
            nx.set_node_attributes(G, {n[0]: {'biome': 'desert'}})
            colorMap.update({n[0]: 6})
        elif n[1]['precipitation'] <= 200:
            nx.set_node_attributes(G, {n[0]: {'biome': 'savannah'}})
            colorMap.update({n[0]: 7})
        else:
            nx.set_node_attributes(G, {n[0]: {'biome': 'rainforest'}})
            colorMap.update({n[0]: 8})
#    if n[1]['biome'] != 'ocean':
#        print(str(n[0]) + "\t" + n[1]['biome'] + "\t" + str(temperature))
#        print(n[1]['elevation'] * -0.075 + 30)
#        print(n[1]['latitude'] * -.67 + 40)

colors = [colorMap.get(node, 0) for node in G.nodes()]

plt.figure(figsize=(12, 12))
nx.draw(G, pos,
        node_shape='s',
        node_size=500,
        edge_color='w',
        font_color='w',
        node_color=colors,
        vmin=0,
        vmax=9,
        cmap=matplotlib.colors.ListedColormap(['royalblue', 'powderblue', 'olive', 'yellowgreen', 'lightgreen',
                                               'forestgreen', 'gold', 'goldenrod', 'springgreen', 'slategray'])
        )
plt.show()
